<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>PayMe ‚Äî Solicita tu ride</title>

  <!-- Leaflet CSS (para el mapa) -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />

  <style>
    body {
      margin: 0;
      font-family: "Poppins", Arial, sans-serif;
      background: #f9fbff;
      color: #222;
    }

    header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px 25px;
      background: white;
      box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

    h1 {
      margin: 0;
      font-size: 1.5rem;
      color: #2b8cff;
    }

    main {
      display: grid;
      grid-template-columns: 350px 1fr;
      gap: 20px;
      padding: 20px;
    }

    @media(max-width:900px) {
      main { grid-template-columns: 1fr; }
      #map { height: 60vh; }
    }

    .panel {
      background: white;
      border-radius: 12px;
      padding: 20px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

    label { display: block; font-size: 0.9rem; margin-top: 10px; color: #555; }
    input {
      width: 100%;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 8px;
      margin-top: 4px;
      font-size: 1rem;
    }

    button {
      background: #2b8cff;
      color: white;
      border: none;
      padding: 10px 15px;
      margin-top: 15px;
      border-radius: 8px;
      font-size: 1rem;
      cursor: pointer;
    }
    button:hover { background: #0078f2; }

    #map {
      height: 80vh;
      border-radius: 12px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

    .status {
      margin-top: 15px;
      background: #f0f7ff;
      padding: 10px;
      border-radius: 8px;
      font-size: 0.9rem;
    }
  </style>
</head>

<body>
  <header>
    <h1>üöó PayMe</h1>
    <div>Solicita y encuentra tu ride f√°cilmente</div>
  </header>

  <main>
    <div class="panel">
      <h2>Solicitar Ride</h2>

      <label>Tu nombre</label>
      <input id="name" placeholder="Ej: Ana P√©rez" />

      <label>Origen (lat,lng o nombre)</label>
      <input id="pickup" placeholder="Ej: 40.4168,-3.7038 o 'Centro'" />

      <label>Destino (lat,lng o nombre)</label>
      <input id="destination" placeholder="Ej: 40.4300,-3.7000 o 'Aeropuerto'" />

      <button id="locateBtn">üìç Usar mi ubicaci√≥n</button>
      <button id="requestBtn">üöï Solicitar Ride</button>

      <div class="status" id="status">Estado: esperando datos...</div>
    </div>

    <div id="map"></div>
  </main>

  <footer style="text-align:center; padding:15px; font-size:0.9rem; color:#777;">
    ¬© <span id="year"></span> PayMe ‚Äî Demo
  </footer>

  <!-- Leaflet JS -->
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

  <script>
    document.getElementById("year").textContent = new Date().getFullYear();

    // Mapa base
    const map = L.map("map").setView([40.4168, -3.7038], 13);
    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      maxZoom: 19,
      attribution: "&copy; OpenStreetMap"
    }).addTo(map);

    let pickupMarker, destMarker, driverMarker;

    function toRad(deg){ return deg * Math.PI / 180; }
    function haversine(lat1, lon1, lat2, lon2){
      const R = 6371;
      const dLat = toRad(lat2-lat1);
      const dLon = toRad(lon2-lon1);
      const a = Math.sin(dLat/2)**2 + Math.cos(toRad(lat1))*Math.cos(toRad(lat2))*Math.sin(dLon/2)**2;
      return 2*R*Math.asin(Math.sqrt(a));
    }

    function estimateFare(km){
      const base = 1.5, perKm = 0.8;
      return (base + km*perKm).toFixed(2);
    }

    function parseLoc(text){
      const match = text.match(/^\\s*([+-]?\\d+\\.?\\d*),\\s*([+-]?\\d+\\.?\\d*)\\s*$/);
      if(match) return {lat:+match[1], lng:+match[2]};
      const base = {lat:40.4168, lng:-3.7038};
      const rand = Math.random()/100;
      return {lat:base.lat+rand, lng:base.lng+rand};
    }

    document.getElementById("locateBtn").onclick = () => {
      if(navigator.geolocation){
        navigator.geolocation.getCurrentPosition(pos=>{
          const {latitude, longitude} = pos.coords;
          document.getElementById("pickup").value = latitude.toFixed(5)+","+longitude.toFixed(5);
          map.setView([latitude,longitude],14);
        });
      } else alert("Tu navegador no admite geolocalizaci√≥n.");
    };

    document.getElementById("requestBtn").onclick = () => {
      const pickup = parseLoc(document.getElementById("pickup").value);
      const dest = parseLoc(document.getElementById("destination").value);

      if(pickupMarker) map.removeLayer(pickupMarker);
      if(destMarker) map.removeLayer(destMarker);

      pickupMarker = L.marker([pickup.lat,pickup.lng]).addTo(map).bindPopup("Origen").openPopup();
      destMarker = L.marker([dest.lat,dest.lng]).addTo(map).bindPopup("Destino");

      const km = haversine(pickup.lat,pickup.lng,dest.lat,dest.lng);
      const fare = estimateFare(km);

      document.getElementById("status").textContent =
        `Distancia: ${km.toFixed(2)} km ¬∑ Tarifa estimada: ${fare} ‚Ç¨`;

      // Simula un conductor que se mueve hacia el usuario
      simulateDriver(pickup, dest);
    };

    function simulateDriver(pickup, dest){
      const driver = {lat:pickup.lat+0.01, lng:pickup.lng+0.01};
      if(driverMarker) map.removeLayer(driverMarker);
      driverMarker = L.marker([driver.lat, driver.lng], {title:"Conductor"}).addTo(map);

      const interval = setInterval(()=>{
        const d = haversine(driver.lat, driver.lng, pickup.lat, pickup.lng);
        if(d < 0.1){
          document.getElementById("status").textContent = "Conductor lleg√≥. En camino al destino...";
          clearInterval(interval);
          simulateToDestination(dest);
        } else {
          driver.lat += (pickup.lat - driver.lat)*0.1;
          driver.lng += (pickup.lng - driver.lng)*0.1;
          driverMarker.setLatLng([driver.lat, driver.lng]);
        }
      }, 1000);
    }

    function simulateToDestination(dest){
      const interval = setInterval(()=>{
        const d = haversine(driverMarker.getLatLng().lat, driverMarker.getLatLng().lng, dest.lat, dest.lng);
        if(d < 0.1){
          document.getElementById("status").textContent = "Viaje completado. Gracias por usar PayMe!";
          clearInterval(interval);
        } else {
          const p = driverMarker.getLatLng();
          const newLat = p.lat + (dest.lat - p.lat)*0.05;
          const newLng = p.lng + (dest.lng - p.lng)*0.05;
          driverMarker.setLatLng([newLat, newLng]);
        }
      }, 1000);
    }
  </script>
</body>
</html>
